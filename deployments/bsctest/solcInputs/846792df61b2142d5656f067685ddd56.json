{
  "language": "Solidity",
  "sources": {
    "contracts/BridgeBase.sol": {
      "content": "pragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IToken.sol\";\n\ncontract BridgeBase {\n    address public owner;\n    IToken public token;\n    uint256 public nonce;\n    mapping(uint256 => bool) public processedNonces;\n\n    enum Step {\n        Burn,\n        Mint\n    }\n\n    event Transfer(\n        address from,\n        address to,\n        uint256 amount,\n        uint256 date,\n        uint256 nonce,\n        Step indexed step\n    );\n\n    constructor(address _token) {\n        owner = msg.sender;\n        token = IToken(_token);\n    }\n\n    function burn(address account, uint256 amount) external {\n        token.burn(msg.sender, amount);\n        emit Transfer(\n            msg.sender,\n            account,\n            amount,\n            block.timestamp,\n            nonce,\n            Step.Burn\n        );\n        nonce++;\n    }\n\n    function mint(\n        address account,\n        uint256 amount,\n        uint256 otherChainNonce\n    ) external onlyOwner {\n        require(\n            processedNonces[otherChainNonce] == false,\n            \"TRANSFER_ALREADY_PROCESSED\"\n        );\n        processedNonces[otherChainNonce] = true;\n        token.mint(account, amount);\n        emit Transfer(\n            msg.sender,\n            account,\n            amount,\n            block.timestamp,\n            otherChainNonce,\n            Step.Mint\n        );\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"ONLY_OWNER\");\n        _;\n    }\n}\n"
    },
    "contracts/IToken.sol": {
      "content": "pragma solidity >=0.6.0 <0.8.0;\n\ninterface IToken {\n    function mint(address account, uint256 amount) external;\n\n    function burn(address account, uint256 amount) external;\n}\n"
    },
    "contracts/BridgeETH.sol": {
      "content": "pragma solidity >=0.6.0 <0.8.0;\n\nimport \"./BridgeBase.sol\";\n\ncontract BridgeETH is BridgeBase {\n    constructor(address token) BridgeBase(token) {}\n}\n"
    },
    "contracts/BridgeBSC.sol": {
      "content": "pragma solidity >=0.6.0 <0.8.0;\n\nimport \"./BridgeBase.sol\";\n\ncontract BridgeBSC is BridgeBase {\n    constructor(address token) BridgeBase(token) {}\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}