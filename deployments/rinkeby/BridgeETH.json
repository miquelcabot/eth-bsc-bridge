{
  "address": "0x32d6976d01a07492AfaE0fCB0c5Fc59d2c113Df7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "enum BridgeBase.Step",
          "name": "step",
          "type": "uint8"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxProcessedNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "processedNonces",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2755c1c3dbf4a5a65c90929f9dc5d46826a2e35985db0348b0c6431a53531bf3",
  "receipt": {
    "to": null,
    "from": "0x207ca4370639120f9A049aF9CAB4fCaa608F2445",
    "contractAddress": "0x32d6976d01a07492AfaE0fCB0c5Fc59d2c113Df7",
    "transactionIndex": 14,
    "gasUsed": "564136",
    "logsBloom": "0x
    "blockHash": "0x7d8599e47fa123ee1ccf9145485ae9571a1e7adab3a7403ecd132c261228c09f",
    "transactionHash": "0x2755c1c3dbf4a5a65c90929f9dc5d46826a2e35985db0348b0c6431a53531bf3",
    "logs": [],
    "blockNumber": 9654391,
    "cumulativeGasUsed": "9215228",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4854CC3e4376258260A0Ddf11fc89dEB7a811d54"
  ],
  "solcInputHash": "cf652ade0aad75c805905b4e2fba53fb",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"enum BridgeBase.Step\",\"name\":\"step\",\"type\":\"uint8\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxProcessedNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"processedNonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BridgeETH.sol\":\"BridgeETH\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BridgeBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IToken.sol\\\";\\n\\ncontract BridgeBase {\\n    address public owner;\\n    IToken public token;\\n    mapping(address => mapping(uint256 => bool)) public processedNonces;\\n    mapping(address => uint256) public maxProcessedNonce;\\n\\n    enum Step {\\n        Burn,\\n        Mint\\n    }\\n\\n    event Transfer(\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 date,\\n        uint256 nonce,\\n        bytes signature,\\n        Step indexed step\\n    );\\n\\n    constructor(address _token) {\\n        owner = msg.sender;\\n        token = IToken(_token);\\n    }\\n\\n    function burn(\\n        address to,\\n        uint256 amount,\\n        uint256 nonce,\\n        bytes calldata signature\\n    ) external {\\n        require(\\n            processedNonces[msg.sender][nonce] == false,\\n            \\\"TRANSFER_ALREADY_PROCESSED\\\"\\n        );\\n        processedNonces[msg.sender][nonce] = true;\\n        if (nonce > maxProcessedNonce[msg.sender]) {\\n            maxProcessedNonce[msg.sender] = nonce;\\n        }\\n        token.burn(msg.sender, amount);\\n        emit Transfer(\\n            msg.sender,\\n            to,\\n            amount,\\n            block.timestamp,\\n            nonce,\\n            signature,\\n            Step.Burn\\n        );\\n    }\\n\\n    function mint(\\n        address from,\\n        address to,\\n        uint256 amount,\\n        uint256 nonce,\\n        bytes calldata signature\\n    ) external {\\n        bytes32 message = prefixed(\\n            keccak256(abi.encodePacked(from, to, amount, nonce))\\n        );\\n        require(recoverSigner(message, signature) == from, \\\"WRONG_SIGNATURE\\\");\\n        require(\\n            processedNonces[from][nonce] == false,\\n            \\\"TRANSFER_ALREADY_PROCESSED\\\"\\n        );\\n        processedNonces[from][nonce] = true;\\n        if (nonce > maxProcessedNonce[from]) {\\n            maxProcessedNonce[from] = nonce;\\n        }\\n        token.mint(to, amount);\\n        emit Transfer(\\n            from,\\n            to,\\n            amount,\\n            block.timestamp,\\n            nonce,\\n            signature,\\n            Step.Mint\\n        );\\n    }\\n\\n    function prefixed(bytes32 hash) internal pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash)\\n            );\\n    }\\n\\n    function recoverSigner(bytes32 message, bytes memory sig)\\n        internal\\n        pure\\n        returns (address)\\n    {\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n\\n        (v, r, s) = splitSignature(sig);\\n\\n        return ecrecover(message, v, r, s);\\n    }\\n\\n    function splitSignature(bytes memory sig)\\n        internal\\n        pure\\n        returns (\\n            uint8,\\n            bytes32,\\n            bytes32\\n        )\\n    {\\n        require(sig.length == 65);\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        assembly {\\n            // first 32 bytes, after the length prefix\\n            r := mload(add(sig, 32))\\n            // second 32 bytes\\n            s := mload(add(sig, 64))\\n            // final byte (first byte of the next 32 bytes)\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        return (v, r, s);\\n    }\\n}\\n\",\"keccak256\":\"0x091c5b8e870e469ddbd625a9c9206cb65eb0b0ca0008fb46ddd145236cc83763\",\"license\":\"MIT\"},\"contracts/BridgeETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./BridgeBase.sol\\\";\\n\\ncontract BridgeETH is BridgeBase {\\n    constructor(address token) BridgeBase(token) {}\\n}\\n\",\"keccak256\":\"0xe0c15b66271c4e20ea463b50090c5e6d73cebcfcf619a36c17b203654e1e90ec\",\"license\":\"MIT\"},\"contracts/IToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0 <0.8.0;\\n\\ninterface IToken {\\n    function mint(address account, uint256 amount) external;\\n\\n    function burn(address account, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x920ed1105b0ff7d5a2de6133aba6ebc95b3bb24622ccb776c0bb0a45d3c11b4a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516108dc3803806108dc8339818101604052602081101561003357600080fd5b5051600080546001600160a01b03199081163317909155600180546001600160a01b039093169290911691909117905561086a806100726000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806352555702146100675780637cc70240146100fe578063842a7f121461013e5780638a94b05f146101765780638da5cb5b14610202578063fc0c546a14610226575b600080fd5b6100fc600480360360a081101561007d57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156100bd57600080fd5b8201836020820111156100cf57600080fd5b803590602001918460018302840111640100000000831117156100f157600080fd5b50909250905061022e565b005b61012a6004803603604081101561011457600080fd5b506001600160a01b038135169060200135610514565b604080519115158252519081900360200190f35b6101646004803603602081101561015457600080fd5b50356001600160a01b0316610534565b60408051918252519081900360200190f35b6100fc6004803603608081101561018c57600080fd5b6001600160a01b0382351691602081013591604082013591908101906080810160608201356401000000008111156101c357600080fd5b8201836020820111156101d557600080fd5b803590602001918460018302840111640100000000831117156101f757600080fd5b509092509050610546565b61020a610713565b604080516001600160a01b039092168252519081900360200190f35b61020a610722565b600061028f8787878760405160200180856001600160a01b031660601b8152601401846001600160a01b031660601b815260140183815260200182815260200194505050505060405160208183030381529060405280519060200120610731565b9050866001600160a01b03166102db8285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061078292505050565b6001600160a01b031614610328576040805162461bcd60e51b815260206004820152600f60248201526e57524f4e475f5349474e415455524560881b604482015290519081900360640190fd5b6001600160a01b038716600090815260026020908152604080832087845290915290205460ff16156103a1576040805162461bcd60e51b815260206004820152601a60248201527f5452414e534645525f414c52454144595f50524f434553534544000000000000604482015290519081900360640190fd5b6001600160a01b03871660008181526002602090815260408083208884528252808320805460ff191660011790559282526003905220548411156103fb576001600160a01b03871660009081526003602052604090208490555b600154604080516340c10f1960e01b81526001600160a01b03898116600483015260248201899052915191909216916340c10f1991604480830192600092919082900301818387803b15801561045057600080fd5b505af1158015610464573d6000803e3d6000fd5b5060019250610471915050565b7fce5a9b86edd3b998c3948a7934c7ecf7dba73c4c5bcf56cf576bca4aa2beeb308888884289898960405180886001600160a01b03168152602001876001600160a01b03168152602001868152602001858152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039a509098505050505050505050a250505050505050565b600260209081526000928352604080842090915290825290205460ff1681565b60036020526000908152604090205481565b33600090815260026020908152604080832086845290915290205460ff16156105b6576040805162461bcd60e51b815260206004820152601a60248201527f5452414e534645525f414c52454144595f50524f434553534544000000000000604482015290519081900360640190fd5b3360008181526002602090815260408083208784528252808320805460ff191660011790559282526003905220548311156105fe573360009081526003602052604090208390555b60015460408051632770a7eb60e21b81523360048201526024810187905290516001600160a01b0390921691639dc29fac9160448082019260009290919082900301818387803b15801561065157600080fd5b505af1158015610665573d6000803e3d6000fd5b5060009250610672915050565b7fce5a9b86edd3b998c3948a7934c7ecf7dba73c4c5bcf56cf576bca4aa2beeb303387874288888860405180886001600160a01b03168152602001876001600160a01b03168152602001868152602001858152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039a509098505050505050505050a25050505050565b6000546001600160a01b031681565b6001546001600160a01b031681565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b60008060008061079185610805565b604080516000815260208082018084528c905260ff8616828401526060820185905260808201849052915194975092955090935060019260a080840193601f198301929081900390910190855afa1580156107f0573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461081857600080fd5b5050506020810151604082015160609092015160001a9290919056fea2646970667358221220f653f1f51a0ef5a8d441b3e32f41f787fd518c0fad7edad2c279f95d7d5bec5864736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806352555702146100675780637cc70240146100fe578063842a7f121461013e5780638a94b05f146101765780638da5cb5b14610202578063fc0c546a14610226575b600080fd5b6100fc600480360360a081101561007d57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156100bd57600080fd5b8201836020820111156100cf57600080fd5b803590602001918460018302840111640100000000831117156100f157600080fd5b50909250905061022e565b005b61012a6004803603604081101561011457600080fd5b506001600160a01b038135169060200135610514565b604080519115158252519081900360200190f35b6101646004803603602081101561015457600080fd5b50356001600160a01b0316610534565b60408051918252519081900360200190f35b6100fc6004803603608081101561018c57600080fd5b6001600160a01b0382351691602081013591604082013591908101906080810160608201356401000000008111156101c357600080fd5b8201836020820111156101d557600080fd5b803590602001918460018302840111640100000000831117156101f757600080fd5b509092509050610546565b61020a610713565b604080516001600160a01b039092168252519081900360200190f35b61020a610722565b600061028f8787878760405160200180856001600160a01b031660601b8152601401846001600160a01b031660601b815260140183815260200182815260200194505050505060405160208183030381529060405280519060200120610731565b9050866001600160a01b03166102db8285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061078292505050565b6001600160a01b031614610328576040805162461bcd60e51b815260206004820152600f60248201526e57524f4e475f5349474e415455524560881b604482015290519081900360640190fd5b6001600160a01b038716600090815260026020908152604080832087845290915290205460ff16156103a1576040805162461bcd60e51b815260206004820152601a60248201527f5452414e534645525f414c52454144595f50524f434553534544000000000000604482015290519081900360640190fd5b6001600160a01b03871660008181526002602090815260408083208884528252808320805460ff191660011790559282526003905220548411156103fb576001600160a01b03871660009081526003602052604090208490555b600154604080516340c10f1960e01b81526001600160a01b03898116600483015260248201899052915191909216916340c10f1991604480830192600092919082900301818387803b15801561045057600080fd5b505af1158015610464573d6000803e3d6000fd5b5060019250610471915050565b7fce5a9b86edd3b998c3948a7934c7ecf7dba73c4c5bcf56cf576bca4aa2beeb308888884289898960405180886001600160a01b03168152602001876001600160a01b03168152602001868152602001858152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039a509098505050505050505050a250505050505050565b600260209081526000928352604080842090915290825290205460ff1681565b60036020526000908152604090205481565b33600090815260026020908152604080832086845290915290205460ff16156105b6576040805162461bcd60e51b815260206004820152601a60248201527f5452414e534645525f414c52454144595f50524f434553534544000000000000604482015290519081900360640190fd5b3360008181526002602090815260408083208784528252808320805460ff191660011790559282526003905220548311156105fe573360009081526003602052604090208390555b60015460408051632770a7eb60e21b81523360048201526024810187905290516001600160a01b0390921691639dc29fac9160448082019260009290919082900301818387803b15801561065157600080fd5b505af1158015610665573d6000803e3d6000fd5b5060009250610672915050565b7fce5a9b86edd3b998c3948a7934c7ecf7dba73c4c5bcf56cf576bca4aa2beeb303387874288888860405180886001600160a01b03168152602001876001600160a01b03168152602001868152602001858152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039a509098505050505050505050a25050505050565b6000546001600160a01b031681565b6001546001600160a01b031681565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b60008060008061079185610805565b604080516000815260208082018084528c905260ff8616828401526060820185905260808201849052915194975092955090935060019260a080840193601f198301929081900390910190855afa1580156107f0573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461081857600080fd5b5050506020810151604082015160609092015160001a9290919056fea2646970667358221220f653f1f51a0ef5a8d441b3e32f41f787fd518c0fad7edad2c279f95d7d5bec5864736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 19,
        "contract": "contracts/BridgeETH.sol:BridgeETH",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 21,
        "contract": "contracts/BridgeETH.sol:BridgeETH",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IToken)343"
      },
      {
        "astId": 27,
        "contract": "contracts/BridgeETH.sol:BridgeETH",
        "label": "processedNonces",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 31,
        "contract": "contracts/BridgeETH.sol:BridgeETH",
        "label": "maxProcessedNonce",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IToken)343": {
        "encoding": "inplace",
        "label": "contract IToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}